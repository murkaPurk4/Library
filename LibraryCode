import sqlite3

def create_tables(conn):
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS пользователи (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                имя TEXT,
                фамилия TEXT,
                email TEXT)''')
    c.execute('''CREATE TABLE IF NOT EXISTS книги (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                название TEXT,
                автор TEXT,
                год INTEGER,
                экземпляры INTEGER)''')
    c.execute('''CREATE TABLE IF NOT EXISTS выдачи (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                пользователь_id INTEGER,
                книга_id INTEGER,
                дата_выдачи TEXT,
                дата_возврата TEXT,
                FOREIGN KEY(пользователь_id) REFERENCES пользователи(id),
                FOREIGN KEY(книга_id) REFERENCES книги(id))''')
    conn.commit()

def регистрация_пользователя(conn, имя, фамилия, email):
    c = conn.cursor()
    c.execute("INSERT INTO пользователи (имя, фамилия, email) VALUES (?, ?, ?)", (имя, фамилия, email))
    conn.commit()

def добавление_книги(conn, название, автор, год, экземпляры):
    c = conn.cursor()
    c.execute("INSERT INTO книги (название, автор, год, экземпляры) VALUES (?, ?, ?, ?)", (название, автор, год, экземпляры))
    conn.commit()

def выдача_книги(conn, пользователь_id, книга_id, дата_выдачи, дата_возврата):
    c = conn.cursor()
    c.execute("INSERT INTO выдачи (пользователь_id, книга_id, дата_выдачи, дата_возврата) VALUES (?, ?, ?, ?)",
              (пользователь_id, книга_id, дата_выдачи, дата_возврата))
    c.execute("UPDATE книги SET экземпляры = экземпляры - 1 WHERE id = ?", (книга_id,))
    conn.commit()

def возврат_книги(conn, выдача_id):
    c = conn.cursor()
    c.execute("SELECT книга_id FROM выдачи WHERE id = ?", (выдача_id,))
    книга_id = c.fetchone()[0]
    c.execute("DELETE FROM выдачи WHERE id = ?", (выдача_id,))
    c.execute("UPDATE книги SET экземпляры = экземпляры + 1 WHERE id = ?", (книга_id,))
    conn.commit()

def просмотр_книг(conn):
    c = conn.cursor()
    c.execute("SELECT * FROM книги")
    return c.fetchall()

def просмотр_выдач(conn):
    c = conn.cursor()
    c.execute("SELECT * FROM выдачи")
    return c.fetchall()

if __name__ == "__main__":
    conn = sqlite3.connect('library.db')
    create_tables(conn)
    регистрация_пользователя(conn, "Мурад", "Мирзазаде", "murad.mirzazada@gmail.com")
    добавление_книги(conn, "Keka", "Лев Худой", 6952, 3)
    print("Книги после добавления:", просмотр_книг(conn))
    выдача_книги(conn, 1, 1, "2025-03-06", "2025-03-20")
    print("История выдачи после выдачи книги:", просмотр_выдач(conn))
    возврат_книги(conn, 1)
    print("Книги после возврата:", просмотр_книг(conn))
    print("История выдачи после возврата книги:", просмотр_выдач(conn))
    conn.close()
